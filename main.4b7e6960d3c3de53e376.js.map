{"version":3,"file":"main.4b7e6960d3c3de53e376.js","mappings":"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","sources":["webpack://onemain-ui-exercise/./src/components/PaymentFieldGridItem.js","webpack://onemain-ui-exercise/./src/components/WhereCanIFindGridItem.js","webpack://onemain-ui-exercise/./src/components/CheckingGridItems.js","webpack://onemain-ui-exercise/./src/components/DebitCardGridItems.js","webpack://onemain-ui-exercise/./src/components/GenericGridItems.js","webpack://onemain-ui-exercise/./src/components/OneTimeLoanPaymentPage.js","webpack://onemain-ui-exercise/./src/components/theme.js","webpack://onemain-ui-exercise/./src/components/App.js","webpack://onemain-ui-exercise/./src/index.js"],"sourcesContent":["import { FormControl, FormErrorMessage, FormLabel, GridItem, Text, VStack } from '@chakra-ui/react';\nimport React from 'react';\nimport { Controller, useFormState } from 'react-hook-form';\nimport { get } from 'lodash';\n\nexport function PaymentFieldGridItem({ control, label, name, render, rules }) {\n  const formState = useFormState({ control, name });\n  const message = get(formState, ['errors', name, 'message']);\n  return (\n    <GridItem area={name} bg=\"white\">\n      <FormControl isInvalid={!!message}>\n        <VStack align=\"flex-start\" pb={2} px={2} pt={1} spacing={0}>\n          <FormLabel color={message ? 'red.500' : 'gray.600'}>{label}:</FormLabel>\n          <Controller\n            control={control}\n            name={name}\n            render={render}\n            rules={{ required: { value: true, message: `${label} is required` }, ...rules }}\n          />\n        </VStack>\n        <FormErrorMessage bg=\"red.100\" borderTop={1} borderColor=\"gray.300\" borderStyle=\"solid\" px={2} py={1}>\n          <Text color=\"inherit\" fontSize=\"0.75rem\" wordBreak=\"break-all\" noOfLines={1}>\n            {message}\n          </Text>\n        </FormErrorMessage>\n      </FormControl>\n    </GridItem>\n  );\n}\n","import { GridItem, Img, Text, VStack } from '@chakra-ui/react';\nimport React from 'react';\n\nexport function WhereCanIFindGridItem({ area, children, src }) {\n  return (\n    <GridItem area={area} bg=\"blue.50\" minH=\"16rem\">\n      <VStack py={3}>\n        <Text fontSize=\"0.875rem\" fontWeight={700} textAlign=\"center\" w=\"15rem\">\n          {children}\n        </Text>\n        <Img alt={area} h=\"11rem\" src={src} w=\"18.75rem\" />\n      </VStack>\n    </GridItem>\n  );\n}\n","import { Input } from '@chakra-ui/react';\nimport { trim } from 'lodash';\nimport React from 'react';\nimport { NumericFormat, PatternFormat } from 'react-number-format';\nimport { PaymentFieldGridItem } from './PaymentFieldGridItem';\nimport { WhereCanIFindGridItem } from './WhereCanIFindGridItem';\n\nexport function CheckingGridItems({ control }) {\n  return (\n    <>\n      <PaymentFieldGridItem\n        name=\"routingNumber\"\n        label=\"Routing Number\"\n        control={control}\n        render={({ field }) => (\n          <Input as={PatternFormat} format=\"#########\" mask=\"#\" placeholder=\"#########\" {...field} />\n        )}\n      />\n      <PaymentFieldGridItem\n        name=\"bankAccountNumber\"\n        label=\"Bank Account Number\"\n        control={control}\n        render={({ field }) => <Input as={NumericFormat} {...field} />}\n      />\n      <PaymentFieldGridItem\n        name=\"confirmBankAccountNumber\"\n        label=\"Confirm Bank Account Number\"\n        control={control}\n        render={({ field }) => <Input as={NumericFormat} {...field} />}\n        rules={{\n          validate: (v, { bankAccountNumber }) =>\n            trim(v) === trim(bankAccountNumber) ? null : 'Must match Bank Account Number',\n        }}\n      />\n      <WhereCanIFindGridItem area=\"check\" src=\"/onemain-ui-exercise-site/check.png\">\n        Where can I find the routing and account number?\n      </WhereCanIFindGridItem>\n    </>\n  );\n}\n","import { Input } from '@chakra-ui/react';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { NumericFormat, PatternFormat } from 'react-number-format';\nimport { PaymentFieldGridItem } from './PaymentFieldGridItem';\nimport { WhereCanIFindGridItem } from './WhereCanIFindGridItem';\n\nexport function DebitCardGridItems({ control }) {\n  return (\n    <>\n      <PaymentFieldGridItem\n        name=\"cardNumber\"\n        label=\"Card Number\"\n        control={control}\n        render={({ field }) => <Input as={NumericFormat} {...field} />}\n      />\n      <PaymentFieldGridItem\n        name=\"nameOnCard\"\n        label=\"Name On Card\"\n        control={control}\n        render={({ field }) => <Input {...field} />}\n      />\n      <PaymentFieldGridItem\n        name=\"expirationDate\"\n        label=\"Expiration Date\"\n        control={control}\n        render={({ field }) => <Input as={PatternFormat} format=\"##/##\" mask=\"_\" placeholder=\"MM/YY\" {...field} />}\n        rules={{\n          validate: {\n            isValid: v => (DateTime.fromFormat(v, 'LL/yy').isValid ? null : 'Invalid Expiration Date'),\n            isLater: v => (DateTime.fromFormat(v, 'LL/yy') > DateTime.now() ? null : 'Invalid Expiration Date'),\n          },\n        }}\n      />\n      <PaymentFieldGridItem\n        name=\"cvv\"\n        label=\"CVV\"\n        control={control}\n        render={({ field }) => <Input as={PatternFormat} format=\"###\" placeholder=\"###\" {...field} />}\n        rules={{ validate: v => (v.length === 3 ? null : 'Invalid CVV') }}\n      />\n      <WhereCanIFindGridItem area=\"creditCard\" src=\"/onemain-ui-exercise-site/cvv.png\">\n        Where can I find the CVV number?\n      </WhereCanIFindGridItem>\n    </>\n  );\n}\n","import { HStack, Input, Radio, RadioGroup } from '@chakra-ui/react';\nimport React from 'react';\nimport { NumericFormat } from 'react-number-format';\nimport { PaymentFieldGridItem } from './PaymentFieldGridItem';\n\nexport function GenericGridItems({ control }) {\n  return (\n    <>\n      <PaymentFieldGridItem\n        name=\"accountNumber\"\n        label=\"Loan Account Number\"\n        control={control}\n        render={({ field }) => <Input as={NumericFormat} {...field} />}\n      />\n      <PaymentFieldGridItem\n        name=\"accountType\"\n        label=\"Type of Account\"\n        control={control}\n        render={({ field }) => (\n          <RadioGroup {...field}>\n            <HStack spacing={10}>\n              <Radio value=\"CHECKING\">Checking</Radio>\n              <Radio value=\"DEBIT_CARD\">Debit Card</Radio>\n            </HStack>\n          </RadioGroup>\n        )}\n      />\n    </>\n  );\n}\n","import { Button, Grid, Heading, Text, useToast, VStack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CheckingGridItems } from './CheckingGridItems';\nimport { DebitCardGridItems } from './DebitCardGridItems';\nimport { GenericGridItems } from './GenericGridItems';\nimport { pick } from 'lodash';\n\nconst templateAreas = {\n  CHECKING: {\n    base: `\n\"accountNumber\"\n\"accountType\"\n\"routingNumber\"\n\"bankAccountNumber\"\n\"confirmBankAccountNumber\"\n\"check\"\n`,\n    lg: `\n\"accountNumber accountNumber accountNumber\"\n\"accountType accountType check\"\n\"routingNumber routingNumber check\"\n\"bankAccountNumber bankAccountNumber check\" \n\"confirmBankAccountNumber confirmBankAccountNumber check\"\n`,\n  },\n  DEBIT_CARD: {\n    base: `\n\"accountNumber\"\n\"accountType\"\n\"cardNumber\"\n\"nameOnCard\"\n\"expirationDate\"\n\"cvv\"\n\"creditCard\"\n`,\n    lg: `\n\"accountNumber accountNumber accountNumber\"\n\"accountType accountType creditCard\"\n\"cardNumber cardNumber creditCard\"\n\"nameOnCard nameOnCard creditCard\"\n\"expirationDate cvv creditCard\"\n`,\n  },\n};\n\nconst fields = {\n  CHECKING: ['routingNumber', 'bankAccountNumber'],\n  DEBIT_CARD: ['accountType', 'cardNumber', 'nameOnCard', 'expirationDate', 'cvv'],\n};\n\nexport function OneTimeLoanPaymentPage() {\n  const { control, handleSubmit, watch } = useForm({\n    defaultValues: {\n      accountNumber: '',\n      accountType: 'CHECKING',\n      cardNumber: '',\n      cvv: '',\n      expirationDate: '',\n      nameOnCard: '',\n    },\n  });\n  const accountType = watch('accountType');\n  const toast = useToast();\n  return (\n    <VStack align=\"flex-start\" py=\"3rem\" px={{ base: 4, lg: '6rem' }} spacing={6} w=\"100%\">\n      <VStack align=\"flex-start\" w=\"100%\">\n        <Heading fontSize=\"2rem\">One-time Loan Payment</Heading>\n        <Text>Fill out the form below to complete your payment.</Text>\n      </VStack>\n      <VStack\n        as=\"form\"\n        align=\"flex-start\"\n        spacing={6}\n        onSubmit={handleSubmit(values => {\n          console.log(JSON.stringify(pick(values, ['accountNumber', 'accountType', ...fields[accountType]]), null, 2));\n\n          toast({\n            isClosable: true,\n            colorScheme: 'teal',\n            description: 'Your payment was successful. See browser console for details.',\n            title: 'Success',\n          });\n        })}\n        w=\"100%\"\n      >\n        <Grid\n          bg=\"gray.300\"\n          border={1}\n          borderColor=\"gray.300\"\n          borderStyle=\"solid\"\n          gap=\"1px\"\n          templateAreas={templateAreas[accountType]}\n          templateColumns={{ base: '1fr', lg: '1fr 1fr 23rem' }}\n          w={{ base: '100%', lg: '45rem' }}\n        >\n          <GenericGridItems control={control} />\n          {\n            {\n              CHECKING: <CheckingGridItems control={control} />,\n              DEBIT_CARD: <DebitCardGridItems control={control} />,\n            }[accountType]\n          }\n        </Grid>\n        <Button\n          colorScheme=\"teal\"\n          px=\"4rem\"\n          py=\"1.5rem\"\n          textTransform=\"uppercase\"\n          type=\"submit\"\n          variant=\"solid\"\n          w={{ base: '100%', lg: 'initial' }}\n        >\n          Make Payment\n        </Button>\n      </VStack>\n    </VStack>\n  );\n}\n","import { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { OneTimeLoanPaymentPage } from './OneTimeLoanPaymentPage';\n\nexport const theme = extendTheme({\n  colors: {\n    blue: {\n      50: '#f5f7fc',\n    },\n    gray: {\n      600: '#616161',\n      800: '#1d1d1d',\n    },\n    teal: {\n      500: '#48a09d',\n    },\n  },\n  components: {\n    Button: {\n      baseStyle: {\n        borderRadius: 0,\n      },\n    },\n    FormLabel: {\n      baseStyle: {\n        fontSize: '0.75rem',\n        fontWeight: 700,\n      },\n    },\n    Input: {\n      defaultProps: {\n        variant: 'unstyled',\n      },\n    },\n    Radio: {\n      defaultProps: {\n        size: 'sm',\n      },\n    },\n  },\n  fonts: {\n    heading: `'Roboto', sans-serif`,\n    body: `'Roboto', sans-serif`,\n  },\n  styles: {\n    global: {\n      'html,body': {\n        color: 'gray.800',\n      },\n    },\n  },\n});\n\nexport function App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <OneTimeLoanPaymentPage />\n    </ChakraProvider>\n  );\n}\n","import { ChakraProvider } from '@chakra-ui/react';\nimport { OneTimeLoanPaymentPage } from './OneTimeLoanPaymentPage';\nimport { theme } from './theme';\n\nexport function App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <OneTimeLoanPaymentPage />\n    </ChakraProvider>\n  );\n}\n","import { App } from './components/App';\nimport { createRoot } from 'react-dom/client';\nimport React from 'react';\nimport '@fontsource/roboto';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/700.css';\nimport '@fontsource/roboto/900.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["PaymentFieldGridItem","_ref","control","label","name","render","rules","formState","useFormState","message","get","_jsx","GridItem","area","bg","children","_jsxs","FormControl","isInvalid","VStack","align","pb","px","pt","spacing","FormLabel","color","Controller","_objectSpread","required","value","concat","FormErrorMessage","borderTop","borderColor","borderStyle","py","Text","fontSize","wordBreak","noOfLines","WhereCanIFindGridItem","src","minH","fontWeight","textAlign","w","Img","alt","h","CheckingGridItems","_Fragment","_ref2","field","Input","as","PatternFormat","format","mask","placeholder","_ref3","NumericFormat","_ref4","validate","v","_ref5","bankAccountNumber","trim","DebitCardGridItems","isValid","DateTime","fromFormat","isLater","now","length","GenericGridItems","RadioGroup","HStack","Radio","templateAreas","CHECKING","base","lg","DEBIT_CARD","fields","OneTimeLoanPaymentPage","_useForm","useForm","defaultValues","accountNumber","accountType","cardNumber","cvv","expirationDate","nameOnCard","handleSubmit","watch","toast","useToast","Heading","onSubmit","values","console","log","JSON","stringify","pick","isClosable","colorScheme","description","title","Grid","border","gap","templateColumns","Button","textTransform","type","variant","theme","extendTheme","colors","blue","gray","teal","components","baseStyle","borderRadius","defaultProps","size","fonts","heading","body","styles","global","App","ChakraProvider","container","document","getElementById","createRoot","React"],"sourceRoot":""}